<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="18" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-12-01T12:30:19 UTC" name="Surefire suite" finished-at="2019-12-01T12:30:19 UTC" duration-ms="78">
    <groups>
    </groups>
    <test started-at="2019-12-01T12:30:19 UTC" name="Surefire test" finished-at="2019-12-01T12:30:19 UTC" duration-ms="78">
      <class name="com.example.demo.test.SeriesReducerTest">
        <test-method signature="shouldReduceSeries(java.util.List, double, java.util.List)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldReduceSeries" data-provider="series" finished-at="2019-12-01T12:30:19 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[[1.0, 1.0], [2.0, 1.1], [3.0, 0.9], [4.0, 1.0]]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[[1.0, 1.0], [4.0, 1.0]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReduceSeries -->
        <test-method signature="shouldReduceSeries(java.util.List, double, java.util.List)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldReduceSeries" data-provider="series" finished-at="2019-12-01T12:30:19 UTC" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[[1.0, 1.0], [2.0, 1.1], [3.0, 0.9], [4.0, 1.0]]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.05]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[[1.0, 1.0], [2.0, 1.1], [3.0, 0.9], [4.0, 1.0]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReduceSeries -->
        <test-method signature="shouldReduceSeries(java.util.List, double, java.util.List)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldReduceSeries" data-provider="series" finished-at="2019-12-01T12:30:19 UTC" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zig-zag 101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[zig-zag 101]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReduceSeries -->
        <test-method signature="shouldReduceSeries(java.util.List, double, java.util.List)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldReduceSeries" data-provider="series" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[[1.0, 1.0], [2.0, 1.1], [3.0, 1.2], [4.0, 1.1], [5.0, 1.0]]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[[1.0, 1.0], [3.0, 1.2], [5.0, 1.0]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReduceSeries -->
        <test-method signature="shouldValidateEpsilon(double)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldValidateEpsilon" data-provider="invalidEpsilon" finished-at="2019-12-01T12:30:19 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Epsilon cannot be less then 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Epsilon cannot be less then 0.
at com.example.demo.controller.SeriesReducer.reduce(SeriesReducer.java:21)
at com.example.demo.test.SeriesReducerTest.shouldValidateEpsilon(SeriesReducerTest.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldValidateEpsilon -->
        <test-method signature="shouldReduceSeries(java.util.List, double, java.util.List)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldReduceSeries" data-provider="series" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zig-zag 101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[[[0.0, 0.0], [100.0, 0.0]]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReduceSeries -->
        <test-method signature="shouldValidateEpsilon(double)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="shouldValidateEpsilon" data-provider="invalidEpsilon" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2.0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Epsilon cannot be less then 0.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Epsilon cannot be less then 0.
at com.example.demo.controller.SeriesReducer.reduce(SeriesReducer.java:21)
at com.example.demo.test.SeriesReducerTest.shouldValidateEpsilon(SeriesReducerTest.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:193)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldValidateEpsilon -->
        <test-method signature="testAutomaticEpsilon(com.example.demo.test.skel.NamedArrayList)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="testAutomaticEpsilon" data-provider="automaticEpsilon" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y = 2*x + 1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutomaticEpsilon -->
        <test-method signature="testAutomaticEpsilon(com.example.demo.test.skel.NamedArrayList)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="testAutomaticEpsilon" data-provider="automaticEpsilon" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y = (x-3)*(x-5)*(x-7)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutomaticEpsilon -->
        <test-method signature="testAutomaticEpsilon(com.example.demo.test.skel.NamedArrayList)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="testAutomaticEpsilon" data-provider="automaticEpsilon" finished-at="2019-12-01T12:30:19 UTC" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y = 10^6 * 0.9^x]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutomaticEpsilon -->
        <test-method signature="testAutomaticEpsilon(com.example.demo.test.skel.NamedArrayList)[pri:0, instance:com.example.demo.test.SeriesReducerTest@459e9125]" started-at="2019-12-01T12:30:19 UTC" name="testAutomaticEpsilon" data-provider="automaticEpsilon" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[y = cos(x^2 - 1)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutomaticEpsilon -->
      </class> <!-- com.example.demo.test.SeriesReducerTest -->
      <class name="com.example.demo.test.EpsilonHelperTest">
        <test-method signature="shouldCalculateAverage()[pri:0, instance:com.example.demo.test.EpsilonHelperTest@5c6648b0]" started-at="2019-12-01T12:30:19 UTC" name="shouldCalculateAverage" finished-at="2019-12-01T12:30:19 UTC" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCalculateAverage -->
        <test-method signature="shouldCalculateDeviations()[pri:0, instance:com.example.demo.test.EpsilonHelperTest@5c6648b0]" started-at="2019-12-01T12:30:19 UTC" name="shouldCalculateDeviations" finished-at="2019-12-01T12:30:19 UTC" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCalculateDeviations -->
        <test-method signature="shouldFindMaximum()[pri:0, instance:com.example.demo.test.EpsilonHelperTest@5c6648b0]" started-at="2019-12-01T12:30:19 UTC" name="shouldFindMaximum" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFindMaximum -->
      </class> <!-- com.example.demo.test.EpsilonHelperTest -->
      <class name="com.example.demo.test.LineTest">
        <test-method signature="shouldCalculateDistanceFromPointToLine(com.example.demo.model.Point, com.example.demo.model.Line, double)[pri:0, instance:com.example.demo.test.LineTest@6f1de4c7]" started-at="2019-12-01T12:30:19 UTC" name="shouldCalculateDistanceFromPointToLine" data-provider="pointsAndLines" finished-at="2019-12-01T12:30:19 UTC" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[1.0, 1.0]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.example.demo.model.Line@484970b0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCalculateDistanceFromPointToLine -->
        <test-method signature="shouldCalculateDistanceFromPointToLine(com.example.demo.model.Point, com.example.demo.model.Line, double)[pri:0, instance:com.example.demo.test.LineTest@6f1de4c7]" started-at="2019-12-01T12:30:19 UTC" name="shouldCalculateDistanceFromPointToLine" data-provider="pointsAndLines" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[1.0, 1.0]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.example.demo.model.Line@7748410a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCalculateDistanceFromPointToLine -->
        <test-method signature="shouldCalculateDistanceFromPointToLine(com.example.demo.model.Point, com.example.demo.model.Line, double)[pri:0, instance:com.example.demo.test.LineTest@6f1de4c7]" started-at="2019-12-01T12:30:19 UTC" name="shouldCalculateDistanceFromPointToLine" data-provider="pointsAndLines" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[1.0, 1.0]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.example.demo.model.Line@3943a2be]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.4142135623730951]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCalculateDistanceFromPointToLine -->
        <test-method signature="shouldCalculateDistanceFromPointToLine(com.example.demo.model.Point, com.example.demo.model.Line, double)[pri:0, instance:com.example.demo.test.LineTest@6f1de4c7]" started-at="2019-12-01T12:30:19 UTC" name="shouldCalculateDistanceFromPointToLine" data-provider="pointsAndLines" finished-at="2019-12-01T12:30:19 UTC" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[0.0, 0.0]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.example.demo.model.Line@157853da]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCalculateDistanceFromPointToLine -->
      </class> <!-- com.example.demo.test.LineTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
